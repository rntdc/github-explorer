[{"C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\App.tsx":"1","C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\styles\\global.ts":"2","C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\pages\\Dashboard\\index.tsx":"3","C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\pages\\Dashboard\\styles.ts":"4","C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\pages\\Repository\\index.tsx":"5","C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\routes\\index.tsx":"6"},{"size":295,"mtime":1606863290458,"results":"7","hashOfConfig":"8"},{"size":573,"mtime":1606945126703,"results":"9","hashOfConfig":"8"},{"size":3105,"mtime":1607406967795,"results":"10","hashOfConfig":"8"},{"size":1961,"mtime":1607030714004,"results":"11","hashOfConfig":"8"},{"size":2682,"mtime":1607644051562,"results":"12","hashOfConfig":"8"},{"size":401,"mtime":1607407147527,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17cujzt",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\App.tsx",[],"C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\styles\\global.ts",[],"C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\pages\\Dashboard\\index.tsx",[],["28","29"],"C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\pages\\Repository\\index.tsx",["30"],"import React, { useEffect, useState } from 'react';\r\nimport { useRouteMatch, Link } from 'react-router-dom';\r\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\nimport api from '../../services/api';\r\n\r\nimport logoImg from '../../assets/logo.svg';\r\n\r\nimport { Header, RepositoryInfo, Issues } from './styles';\r\n\r\ninterface RepositoryParams {\r\n    repository: string;\r\n}\r\n\r\ninterface RepositoryParams {\r\n  repository: string;\r\n}\r\n\r\ninterface Repository {\r\n  full_name: string;\r\n  description: string;\r\n  stargazers_count: number;\r\n  forks_count: number;\r\n  open_issues_count: number;\r\n  owner: {\r\n    login: string;\r\n    avatar_url: string;\r\n  };\r\n}\r\n\r\ninterface Issue {\r\n  id: number;\r\n  title: string;\r\n  html_url: string;\r\n  user: {\r\n    login: string;\r\n  };\r\n}\r\n\r\nconst Repository: React.FC = () => {\r\n  const [repository, setRepository] = useState<Repository | null>(null);\r\n  const [issues, setIssues] = useState<Issue[]>([]);\r\n\r\n  const { params } = useRouteMatch<RepositoryParams>();\r\n\r\n  useEffect(() => {\r\n    api.get(`repos/${params.repository}`).then(response => {\r\n      setRepository(response.data);\r\n    });\r\n\r\n    api.get(`repos/${params.repository}/issues`).then(response => {\r\n      setIssues(response.data);\r\n    });\r\n  }, [params.repository]);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <img src={logoImg} alt=\"GitHub Explorer\" />\r\n        <Link to=\"/\">\r\n          <FiChevronLeft size={16} />\r\n          Voltar\r\n        </Link>\r\n      </Header>\r\n\r\n      {repository && (\r\n        <RepositoryInfo>\r\n          <header>\r\n            <img\r\n              src={repository.owner.avatar_url}\r\n              alt={repository.owner.login}\r\n            />\r\n            <div>\r\n              <strong>{repository.full_name}</strong>\r\n              <p>{repository.description}</p>\r\n            </div>\r\n          </header>\r\n          <ul>\r\n            <li>\r\n              <strong>{repository.stargazers_count}</strong>\r\n              <span>Stars</span>\r\n            </li>\r\n            <li>\r\n              <strong>{repository.forks_count}</strong>\r\n              <span>Forks</span>\r\n            </li>\r\n            <li>\r\n              <strong>{repository.open_issues_count}</strong>\r\n              <span>Issues abertas</span>\r\n            </li>\r\n          </ul>\r\n        </RepositoryInfo>\r\n      )}\r\n\r\n      <Issues>\r\n        {issues.map(issue => (\r\n          <a key={issue.id} href={issue.html_url}>\r\n            <div>\r\n              <strong>{issue.title}</strong>\r\n              <p>{issue.user.login}</p>\r\n            </div>\r\n\r\n            <FiChevronRight size={20} />\r\n          </a>\r\n        ))}\r\n      </Issues>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Repository;","C:\\Users\\renat\\Documents\\bootcamp\\github-explorer\\src\\routes\\index.tsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":39,"column":7,"nodeType":"37","messageId":"38","endLine":39,"endColumn":27},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"@typescript-eslint/no-redeclare","'Repository' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]